#!/usr/bin/env python
"""
Script de gerenciamento Docker para o projeto de An√°lise de Cr√©dito.
"""

import subprocess
import sys
import time
import requests

def run_command(command, description):
    """Executa um comando e exibe o resultado."""
    print(f"\nüîÑ {description}")
    print(f"Executando: {command}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Sucesso!")
            if result.stdout:
                print(result.stdout)
            return True
        else:
            print(f"‚ùå Erro:")
            if result.stderr:
                print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå Exce√ß√£o: {e}")
        return False

def check_docker():
    """Verifica se o Docker est√° instalado e funcionando."""
    print("üê≥ Verificando Docker...")
    
    if not run_command("docker --version", "Verificando instala√ß√£o do Docker"):
        print("\n‚ùå Docker n√£o est√° instalado!")
        print("Instale o Docker Desktop em: https://www.docker.com/products/docker-desktop/")
        return False
    
    if not run_command("docker-compose --version", "Verificando Docker Compose"):
        print("\n‚ùå Docker Compose n√£o est√° instalado!")
        return False
    
    return True

def build_images():
    """Constr√≥i as imagens Docker."""
    return run_command("docker-compose build", "Construindo imagens Docker")

def start_services():
    """Inicia os servi√ßos."""
    return run_command("docker-compose up -d", "Iniciando servi√ßos")

def stop_services():
    """Para os servi√ßos."""
    return run_command("docker-compose down", "Parando servi√ßos")

def show_logs():
    """Mostra os logs dos servi√ßos."""
    run_command("docker-compose logs -f", "Visualizando logs")

def check_health():
    """Verifica a sa√∫de dos servi√ßos."""
    print("\nüè• Verificando sa√∫de dos servi√ßos...")
    
    services = [
        ("API", "http://localhost:5000/health"),
        ("Streamlit", "http://localhost:8501"),
        ("Dashboard", "http://localhost:8502")
    ]
    
    for service, url in services:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {service}: OK")
            else:
                print(f"‚ö†Ô∏è {service}: Status {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {service}: N√£o acess√≠vel ({e})")

def main():
    """Fun√ß√£o principal."""
    if len(sys.argv) < 2:
        print("""
üê≥ Script de Gerenciamento Docker - An√°lise de Cr√©dito

Uso: python docker-manager.py <comando>

Comandos dispon√≠veis:
  check     - Verifica se Docker est√° instalado
  build     - Constr√≥i as imagens
  start     - Inicia os servi√ßos
  stop      - Para os servi√ßos
  restart   - Reinicia os servi√ßos
  logs      - Mostra os logs
  health    - Verifica sa√∫de dos servi√ßos
  full      - Setup completo (build + start + health)

Exemplos:
  python docker-manager.py full     # Setup completo
  python docker-manager.py health   # Verificar status
  python docker-manager.py logs     # Ver logs
        """)
        return
    
    command = sys.argv[1].lower()
    
    if command == "check":
        check_docker()
    
    elif command == "build":
        if check_docker():
            build_images()
    
    elif command == "start":
        if check_docker():
            start_services()
            time.sleep(10)  # Aguarda os servi√ßos iniciarem
            check_health()
    
    elif command == "stop":
        stop_services()
    
    elif command == "restart":
        if check_docker():
            stop_services()
            time.sleep(2)
            start_services()
            time.sleep(10)
            check_health()
    
    elif command == "logs":
        show_logs()
    
    elif command == "health":
        check_health()
    
    elif command == "full":
        if check_docker():
            print("üöÄ Iniciando setup completo...")
            if build_images():
                if start_services():
                    print("‚è≥ Aguardando servi√ßos iniciarem...")
                    time.sleep(15)
                    check_health()
                    print("""
üéâ Setup completo!

Acesse as aplica√ß√µes:
‚Ä¢ üè¶ App Principal: http://localhost:8501
‚Ä¢ üìä Dashboard: http://localhost:8502
‚Ä¢ üîå API: http://localhost:5000/health

Para parar: python docker-manager.py stop
                    """)
    
    else:
        print(f"‚ùå Comando desconhecido: {command}")

if __name__ == "__main__":
    main()
